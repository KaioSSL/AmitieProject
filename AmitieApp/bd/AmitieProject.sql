
DROP TABLE IF EXISTS CATEGORIA;
CREATE TABLE CATEGORIA(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	SIGLA VARCHAR(10) NOT NULL,
	TAGS TEXT,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS USUARIO;
CREATE TABLE USUARIO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	ROLE INT NOT NULL,
	LOGIN VARCHAR(20) NOT NULL,
	SENHA VARCHAR(8) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS UNIDADE;
CREATE TABLE UNIDADE(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	SIGLA VARCHAR(10) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS TIPO_PAGAMENTO;
CREATE TABLE TIPO_PAGAMENTO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	SIGLA VARCHAR(10) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS TIPO_DOCUMENTO;
CREATE TABLE TIPO_DOCUMENTO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	SIGLA VARCHAR(10) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS TIPO_CONTATO;
CREATE TABLE TIPO_CONTATO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	SIGLA VARCHAR(10) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS ENDERECO;
CREATE TABLE ENDERECO(
	COD SERIAL NOT NULL,
	RUA VARCHAR(45) NOT NULL,
	BAIRRO VARCHAR(45) NOT NULL,
	LOGRADOURO VARCHAR(45) NOT NULL,
	CIDADE VARCHAR(45) NOT NULL,
	UF VARCHAR(2) NOT NULL,
	CEP VARCHAR(20) NOT NULL,
	COMPLEMENTO TEXT,
	DAT_CAD TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS CONTATO;
CREATE TABLE CONTATO(
	COD SERIAL NOT NULL,
	CONTATO VARCHAR(90),
	DES	VARCHAR(90) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	COD_TIPO_CONTATO INT NOT NULL,
	CONSTRAINT COD_TIPO_CONTATO_FK FOREIGN KEY(COD_TIPO_CONTATO) REFERENCES TIPO_CONTATO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS DOCUMENTO;
CREATE TABLE DOCUMENTO(
	COD SERIAL NOT NULL,
	DOCUMENTO VARCHAR(90) NOT NULL,
	DES VARCHAR(90),
	DAT_CAD TIMESTAMP NOT NULL,
	COD_TIPO_DOC INT NOT NULL,
	CONSTRAINT COD_TIPO_DOC_FK FOREIGN KEY(COD_TIPO_DOC) REFERENCES TIPO_DOCUMENTO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PESSOA;
CREATE TABLE PESSOA(
	COD SERIAL NOT NULL,
	NOME VARCHAR(90) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	DAT_NASC TIMESTAMP NOT NULL,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PESSOA_CONTATO;
CREATE TABLE PESSOA_CONTATO(
	COD SERIAL NOT NULL,
	COD_PESSOA INT NOT NULL,
	COD_CONTATO INT NOT NULL,
	CONSTRAINT COD_PESSOA_FK FOREIGN KEY(COD_PESSOA) REFERENCES PESSOA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_CONTATO_FK FOREIGN KEY(COD_CONTATO) REFERENCES CONTATO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PESSOA_DOCUMENTO;
CREATE TABLE PESSOA_DOCUMENTO(
	COD SERIAL NOT NULL,
	COD_PESSOA INT NOT NULL,
	COD_DOCUMENTO INT NOT NULL,
	CONSTRAINT COD_PESSOA_FK FOREIGN KEY(COD_PESSOA) REFERENCES PESSOA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_DOCUMENTO_FK FOREIGN KEY(COD_DOCUMENTO) REFERENCES DOCUMENTO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PESSOA_ENDERECO;
CREATE TABLE PESSOA_ENDERECO(
	COD SERIAL NOT NULL,
	COD_PESSOA INT NOT NULL,
	COD_ENDERECO INT NOT NULL,
	CONSTRAINT COD_PESSOA_FK FOREIGN KEY(COD_PESSOA) REFERENCES PESSOA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_ENDERECO_FK FOREIGN KEY(COD_ENDERECO) REFERENCES ENDERECO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PRODUTO;
CREATE TABLE PRODUTO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	VLR_CUSTO FLOAT NOT NULL,
	VLR_VENDA FLOAT NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	VAL_DIAS INT NOT NULL,
	COD_UNIDADE INT NOT NULL,
	COD_CATEGORIA INT NOT NULL,
	CONSTRAINT COD_UNIDADE_FK FOREIGN KEY(COD_UNIDADE) REFERENCES UNIDADE(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_CATEGORIA_FK FOREIGN KEY(COD_CATEGORIA) REFERENCES CATEGORIA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS MATERIA_PRIMA;
CREATE TABLE MATERIA_PRIMA(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	VLR_CUSTO FLOAT NOT NULL,
	VLR_VENDA FLOAT NOT NULL,
	FABRICANTE VARCHAR(90) NOT NULL,
	MARCA VARCHAR(45) NOT NULL,
	COD_UNIDADE INT NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	CONSTRAINT COD_UNIDADE_FK FOREIGN KEY(COD_UNIDADE) REFERENCES UNIDADE(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PEDIDO;
CREATE TABLE PEDIDO(
	COD SERIAL NOT NULL,
	TIPO INT NOT NULL,
	DAT_PEDIDO TIMESTAMP NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	STATUS INT NOT NULL,
	SITUACAO INT NOT NULL,
	COD_PESSOA INT NOT NULL,
	COD_PESSOA_DOCUMENTO INT NOT NULL,
	CONSTRAINT COD_PESSOA_FK FOREIGN KEY(COD_PESSOA) REFERENCES PESSOA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_PESSOA_DOCUMENTO_FK FOREIGN KEY(COD_PESSOA_DOCUMENTO) REFERENCES PESSOA_DOCUMENTO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS ARMAZEM;
CREATE TABLE ARMAZEM(
	COD SERIAL NOT NULL,
	NOME VARCHAR(90) NOT NULL,
	DES VARCHAR(90) NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	COD_ENDERECO INT NOT NULL,
	COD_CONTATO INT NOT NULL,
	CONSTRAINT COD_ENDERECO_FK FOREIGN KEY(COD_ENDERECO) REFERENCES ENDERECO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_CONTATO_FK FOREIGN KEY(COD_CONTATO) REFERENCES CONTATO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS ITEM_SAIDA;
CREATE TABLE ITEM_SAIDA(
	COD SERIAL NOT NULL,
	TIPO INT NOT NULL,
	VLR_UNIT FLOAT NOT NULL,
	VLR_TOTAL FLOAT NOT NULL,
	UNIDADE_TOTAL FLOAT NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	COD_ARMAZEM INT NOT NULL,
	COD_PEDIDO INT NOT NULL,
	COD_PRODUTO INT NOT NULL,
	CONSTRAINT COD_ARMAZEM_FK FOREIGN KEY(COD_ARMAZEM) REFERENCES ARMAZEM(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_PEDIDO_FK FOREIGN KEY(COD_PEDIDO) REFERENCES PEDIDO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_PRODUTO_FK FOREIGN KEY(COD_PRODUTO) REFERENCES PRODUTO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS ITEM_ENTRADA;
CREATE TABLE ITEM_ENTRADA(
	COD SERIAL NOT NULL,
	TIPO INT NOT NULL,
	VLR_UNIT FLOAT NOT NULL,
	QTD FLOAT NOT NULL,
	VLR_TOTAL FLOAT NOT NULL,
	UNIDADE_TOTAL FLOAT NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	COD_ARMAZEM INT NOT NULL,
	COD_PEDIDO INT NOT NULL,
	COD_MATERIA_PRIMA INT NOT NULL,
	CONSTRAINT COD_ARMAZEM_FK FOREIGN KEY(COD_ARMAZEM) REFERENCES ARMAZEM(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_PEDIDO_FK FOREIGN KEY(COD_PEDIDO) REFERENCES PEDIDO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_MATERIA_PRIMA_FK FOREIGN KEY(COD_MATERIA_PRIMA) REFERENCES MATERIA_PRIMA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS NOTA;
CREATE TABLE NOTA(
	COD SERIAL NOT NULL,
	VALOR FLOAT NOT NULL,
	DAT_CAD TIMESTAMP NOT NULL,
	DAT_NOTA TIMESTAMP NOT NULL,
	SITUACAO INT NOT NULL,
	STATUS INT NOT NULL,
	COD_PEDIDO INT NOT NULL,
	COD_USUARIO INT NOT NULL,
	CONSTRAINT COD_PEDIDO_FK FOREIGN KEY(COD_PEDIDO) REFERENCES PEDIDO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_USUARIO_FK FOREIGN KEY(COD_USUARIO) REFERENCES USUARIO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);
DROP TABLE IF EXISTS PAGAMENTO;
CREATE TABLE PAGAMENTO(
	COD SERIAL NOT NULL,
	DES VARCHAR(90) NOT NULL,
	N_PARCELAS INT NOT NULL,
	VLR_PARCELAS FLOAT NOT NULL,
	COD_TIPO_PAGAMENTO INT NOT NULL,
	COD_NOTA INT NOT NULL,
	CONSTRAINT COD_TIPO_PAGAMENTO_FK FOREIGN KEY(COD_TIPO_PAGAMENTO) REFERENCES TIPO_PAGAMENTO(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COD_NOTA_FK FOREIGN KEY(COD_NOTA) REFERENCES NOTA(COD) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(COD)
);

DROP TABLE IF EXISTS PRODUTO_MATERIA;
CREATE TABLE PRODUTO_MATERIA(
	COD SERIAL NOT NULL,
	VLR_UNIT_CUSTO FLOAT NOT NULL,
	VLR_UNIT_VENDA FLOAT NOT NULL,
	UNIDADE_TOTAL FLOAT NOT NULL,
	VLR_TOTAL_CUSTO FLOAT NOT NULL,
	VLR_TOTAL_VENDA FLOAT NOT NULL,
	COD_MATERIA_PRIMA INT NOT NULL,
	COD_PRODUTO INT NOT NULL,
	CONSTRAINT COD_MATERIA_PRIMA_FK FOREIGN KEY(COD_MATERIA_PRIMA) REFERENCES MATERIA_PRIMA(COD),
	CONSTRAINT COD_PRODUTO_FK FOREIGN KEY(COD_PRODUTO) REFERENCES PRODUTO(COD),
	PRIMARY KEY(COD));
